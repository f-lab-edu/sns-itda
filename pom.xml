<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>me.liiot</groupId>
    <artifactId>sns-server</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>sns-server</name>
    <description>SNS project for Spring Boot</description>

    <properties>
        <java.version>8</java.version>
    </properties>

    <dependencies>
        <!--
        spring-boot-starter-web
        : Spring MVC를 사용하는 RESTful 애플리케이션을 포함한 웹 구축을 위한 스타터
          Tomcat을 기본 내장 컨테이너로 사용
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--
        spring-boot-starter-jdbc
        : HikariCP 커넥션 풀에서 JDBC를 사용하기 위한 스타터
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <!-- spring-jdbc
        : 기존 JDBC의 단점을 극복할 수 있게 해주고, 간결한 형태의 API 사용법을 제공하며,
          JDBC API에서 지원되지 않는 편리한 기능을 제공하는 JDBC
        -->

        <!--
        mysql-connector-java
        : MySQL용 JDBC Type 4 드라이버
        -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.20</version>
        </dependency>

        <!--
        mybatis
        : XML이나 애너테이션을 통해 SQL문 또는 저장 프로시저로 객체들을 매핑해주는 SQL Mapper 라이브러리
         개발자가 작성한 SQL 명령어와 자바 객체를 매핑해주는 기능을 제공하며, 기존에 사용하던 SQL 명령어를 재사용
        -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.5</version>
        </dependency>

        <!--
        mybatis-spring
        : mybatis와 spring을 편하고 간단하게 연동해주는 모듈
          mybatis Mapper와 SqlSession을 다루고 다른 빈에 주입시켜준다.
        -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>2.0.5</version>
        </dependency>

        <!--
        lombok
        : Model 클래스를 만들 때, getter, setter, toString 등 메서드 작성 코드를 줄여주는 JAVA 라이브러리
         여러가지 어노테이션을 기반으로 코드를 컴파일 과정에서 생성해 주는 방식으로 동작
        -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!--
        jbcrypt
        : OpenBSD 스타일의 Blowfish 암호 해싱 코드를 구현한 라이브러리
        -->
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>

        <!--
        commons-lang3
        : java.lang 패키지 혹은 이에 준하는 클래스에 대한 Java 유틸리티 클래스 패키지
        -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.10</version>
        </dependency>

        <!--
        spring-boot-starter-aop
        : Spring AOP와 AspectJ를 활용한 관점 지향 프로그래밍 스타터
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--
        AWS Java SDK :: Services :: Amazon S3
        : AWS S3와 통신하는데 사용되는 클라이언트 클래스를 제공하는 모듈
        -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
            <version>2.14.10</version>
        </dependency>

        <!--
        spring-session-data-redis
        : 세션 데이터를 Redis에 저장하기 위한 모듈
        -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>

        <!--
        spring-boot-starter-data-redis
        : Redis를 사용하기 위한 스타터 (기본 내장 클라이언트 - Lettuce)
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.firebase</groupId>
            <artifactId>firebase-admin</artifactId>
            <version>6.8.1</version>
        </dependency>

        <!--
        jasypt-spring-boot-starter
        : jasypt를 사용하기 위한 스타터
          property 파일에 있는 설정값을 암호화하기 위함
        -->
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>3.0.3</version>
        </dependency>

        <!--
        spring-boot-starter-validation
        : Bean Validation을 사용하기 위한 스타터
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>


        <!--
        spring-boot-starter-test
        : Spring Boot 애플리케이션을 테스트하기 위한 스타터
          JUnit, Hamcrest, Mockito를 포함

        junit-vintage-engine
        : JUnit Vintage의 TestEngine 구현체
         JUnit3, JUnit4 기반의 테스트를 JUnit5의 JUnit Platform에서 실행시킬 때 사용
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
        </plugins>
    </build>

</project>
